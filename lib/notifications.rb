=begin
#Selling Partner API for Notifications

#The Selling Partner API for Notifications lets you subscribe to notifications that are relevant to a selling partner's business. Using this API you can create a destination to receive notifications, subscribe to notifications, delete notification subscriptions, and more.  For more information, see the [Notifications Use Case Guide](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/use-case-guides/notifications-api-use-case-guide/notifications-use-case-guide-v1.md)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.33
=end

# Common files
require 'notifications/api_client'
require 'notifications/api_error'
require 'notifications/version'
require 'notifications/configuration'

# Models
require 'notifications/models/create_destination_request'
require 'notifications/models/create_destination_response'
require 'notifications/models/create_subscription_request'
require 'notifications/models/create_subscription_response'
require 'notifications/models/delete_destination_response'
require 'notifications/models/delete_subscription_by_id_response'
require 'notifications/models/destination'
require 'notifications/models/destination_list'
require 'notifications/models/destination_resource'
require 'notifications/models/destination_resource_specification'
require 'notifications/models/error'
require 'notifications/models/error_list'
require 'notifications/models/event_bridge_resource'
require 'notifications/models/event_bridge_resource_specification'
require 'notifications/models/get_destination_response'
require 'notifications/models/get_destinations_response'
require 'notifications/models/get_subscription_by_id_response'
require 'notifications/models/get_subscription_response'
require 'notifications/models/sqs_resource'
require 'notifications/models/subscription'

# APIs
require 'notifications/api/notifications_api'

module AmzSpApi::Notifications
  class << self
    # Customize default settings for the SDK using block.
    #   AmzSpApi::Notifications.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
